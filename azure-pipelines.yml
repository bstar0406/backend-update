  # Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- develop
- test
- uat

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

- task: PythonScript@0
  displayName: 'Export project path'
  inputs:
    scriptSource: 'inline'
    script: |
      """Search all subdirectories for `manage.py`."""
      from glob import iglob
      from os import path
      # Python >= 3.9
      manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
      if not manage_py:
          raise SystemExit('Could not find a Django project')
      project_location = path.dirname(path.abspath(manage_py))
      print('Found Django project in', project_location)
      print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

- script: |
    python -m pip install --upgrade pip setuptools wheel source django
    pip install -r requirements.txt
    pip install unittest-xml-reporting
    echo $DJANGO_SETTINGS_MODULE
  displayName: 'Install prerequisites'

- script: |
        python manage.py runserver
# - script: |
#     pip freeze -l
#     python manage.py loaddata pac/fixtures/*.json

# - script: |
#     pushd '$(projectRoot)'
#     python manage.py test --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner --no-input
#   condition: succeededOrFailed()
#   displayName: 'Run tests'

# - script: |
#     bandit $(pwd) . -f 'xml'
