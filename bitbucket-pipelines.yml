# Pipeline configuration for doing a build check on BitBucket
# Bitbucket is running a Debian linux distro, so MSSQL drivers are installed for that OS
# basic install check is run for the Test step. This should be expanded to include an actual testing suite
image: python:3.9

pipelines:
  default:
    - parallel:
        - step:
            name: Build
            caches:
              - pip
            script:
              - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
              - curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list
              - apt-get update
              - ACCEPT_EULA=Y apt-get install -y msodbcsql17
              - echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
              - source ~/.bashrc
              # optional: for unixODBC development headers
              - apt-get install -y unixodbc-dev
              - python -m pip install --upgrade pip setuptools wheel source
              - pip install -r requirements.txt
        - step:
            name: Lint code
            script:
              # Enforce style consistency across Python projects https://flake8.pycqa.org/en/latest/manpage.html
              - pip install flake8
              # disabling for now. Linting checks are failing on almost every file
              #- flake8 . --extend-exclude=dist,build --show-source --statistics
  branches:
    dev:
      - step:
          name: Build and Test
          caches:
            - pip
          script:
            - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
            - curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list
            - apt-get update
            - ACCEPT_EULA=Y apt-get install -y msodbcsql17
            - echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
            - source ~/.bashrc
            # optional: for unixODBC development headers
            - apt-get install -y unixodbc-dev
            - python -m pip install --upgrade pip setuptools wheel source
            - pip install -r requirements.txt
            # runs baseline tests on the backend server
            # this includes creating and populating a test_db on the MS SQL dev server
            # which is not currently working locally, and Bitbucket does not have access. Disabling for now
            # - python manage.py test --noinput