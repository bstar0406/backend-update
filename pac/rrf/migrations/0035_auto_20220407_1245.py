# Generated by Django 2.1.13 on 2022-04-07 15:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('pac', '0010_auto_20210520_2039'),
        ('rrf', '0034_auto_20220405_0916'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceMatrix',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=1)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=1)),
                ('service_matrix_id', models.BigAutoField(db_column='ServiceMatrixID', primary_key=True, serialize=False)),
                ('basing_point_id', models.ForeignKey(db_column='BasingPointID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.BasingPoint')),
                ('country_id', models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.CASCADE, to='pac.Country')),
                ('postal_code_id', models.ForeignKey(db_column='PostalCodeID', on_delete=django.db.models.deletion.CASCADE, to='pac.PostalCode')),
                ('province_id', models.ForeignKey(db_column='ProvinceID', on_delete=django.db.models.deletion.CASCADE, to='pac.Province')),
                ('region_id', models.ForeignKey(db_column='RegionID', on_delete=django.db.models.deletion.CASCADE, to='pac.Region')),
                ('service_point_id', models.ForeignKey(db_column='ServicePointID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServicePoint')),
            ],
            options={
                'db_table': 'ServiceMatrix',
            },
        ),
        migrations.CreateModel(
            name='ServiceMatrixHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=False)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=False)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=False)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=False)),
                ('comments', models.TextField(db_column='Comments', default=False)),
                ('is_active', models.BooleanField(db_column='IsActive', default=1)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=1)),
                ('service_matrix_version_id', models.BigAutoField(db_column='ServiceMatrixVersionID', primary_key=True, serialize=False)),
                ('basing_point_version_id', models.ForeignKey(db_column='BasingPointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.BasingPointHistory')),
                ('country_version_id', models.ForeignKey(db_column='CountryVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.CountryHistory')),
                ('postal_code_version_id', models.ForeignKey(db_column='PostalCodeVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.PostalCodeHistory')),
                ('province_version_id', models.ForeignKey(db_column='ProvinceVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ProvinceHistory')),
                ('region_version_id', models.ForeignKey(db_column='RegionVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.RegionHistory')),
                ('service_point_version_id', models.ForeignKey(db_column='ServicePointVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServicePointHistory')),
            ],
            options={
                'db_table': 'ServiceMatrixHistory',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_type_id', models.BigAutoField(db_column='ServiceTypeID', primary_key=True, serialize=False)),
                ('service_class', models.CharField(db_column='ServiceClass', max_length=10)),
                ('service_type_name', models.CharField(db_column='ServiceTypeName', max_length=10)),
                ('service_type_description', models.TextField(db_column='ServiceTypeDescription', max_length=50)),
            ],
            options={
                'db_table': 'ServiceType',
            },
        ),
        migrations.CreateModel(
            name='ServiceTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_type_version_id', models.BigAutoField(db_column='ServiceTypeVersionID', primary_key=True, serialize=False)),
                ('service_class', models.CharField(db_column='ServiceClass', max_length=10)),
                ('service_type_name', models.CharField(db_column='ServiceTypeName', max_length=10)),
                ('service_type_description', models.TextField(db_column='ServiceTypeDescription', max_length=50)),
                ('service_type', models.ForeignKey(db_column='ServiceTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceType')),
            ],
            options={
                'db_table': 'ServiceTypeHistory',
            },
        ),
        migrations.AddField(
            model_name='servicematrixhistory',
            name='service_type_version_id',
            field=models.ForeignKey(db_column='ServiceTypeVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceTypeHistory'),
        ),
        migrations.AddField(
            model_name='servicematrixhistory',
            name='sub_service_level_id',
            field=models.ForeignKey(db_column='SubServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevel'),
        ),
        migrations.AddField(
            model_name='servicematrixhistory',
            name='terminal_version_id',
            field=models.ForeignKey(db_column='TerminalVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.TerminalHistory'),
        ),
        migrations.AddField(
            model_name='servicematrixhistory',
            name='zone_version_id',
            field=models.ForeignKey(db_column='ZoneVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.ZoneHistory'),
        ),
        migrations.AddField(
            model_name='servicematrix',
            name='service_type_id',
            field=models.ForeignKey(db_column='ServiceTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceType'),
        ),
        migrations.AddField(
            model_name='servicematrix',
            name='sub_service_level_id',
            field=models.ForeignKey(db_column='SubServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevel'),
        ),
        migrations.AddField(
            model_name='servicematrix',
            name='terminal_id',
            field=models.ForeignKey(db_column='TerminalID', on_delete=django.db.models.deletion.CASCADE, to='pac.Terminal'),
        ),
        migrations.AddField(
            model_name='servicematrix',
            name='zone_id',
            field=models.ForeignKey(db_column='ZoneID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Zone'),
        ),
        migrations.AlterIndexTogether(
            name='servicematrixhistory',
            index_together={('service_matrix_version_id', 'version_num')},
        ),
    ]
