# Generated by Django 2.1.13 on 2020-09-15 01:41

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pac', '__first__'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountTree',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('account_tree_id', models.BigAutoField(db_column='AccountTreeID', primary_key=True, serialize=False)),
                ('account', models.ForeignKey(db_column='AccountID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Account', unique=True)),
                ('parent_account', models.ForeignKey(db_column='ParentAccountID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Account')),
            ],
            options={
                'db_table': 'AccountTree',
            },
        ),
        migrations.CreateModel(
            name='AccountTreeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('account_tree_version_id', models.BigAutoField(db_column='AccountTreeVersionID', primary_key=True, serialize=False)),
                ('account_tree', models.ForeignKey(db_column='AccountTreeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.AccountTree')),
                ('account_version', models.ForeignKey(db_column='AccountVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.AccountHistory')),
                ('parent_account_version', models.ForeignKey(db_column='ParentAccountVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.AccountHistory')),
            ],
            options={
                'db_table': 'AccountTree_History',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('currency_id', models.BigAutoField(db_column='CurrencyID', primary_key=True, serialize=False)),
                ('currency_name', models.CharField(db_column='CurrencyName', max_length=50, unique=True)),
                ('currency_code', models.CharField(db_column='CurrencyCode', max_length=3, unique=True)),
            ],
            options={
                'db_table': 'Currency',
            },
        ),
        migrations.CreateModel(
            name='CurrencyHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('currency_version_id', models.BigAutoField(db_column='CurrencyVersionID', primary_key=True, serialize=False)),
                ('currency_name', models.CharField(db_column='CurrencyName', max_length=50)),
                ('currency_code', models.CharField(db_column='CurrencyCode', max_length=3)),
                ('currency', models.ForeignKey(db_column='CurrencyID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Currency')),
            ],
            options={
                'db_table': 'Currency_History',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('customer_id', models.BigAutoField(db_column='CustomerID', primary_key=True, serialize=False)),
                ('customer_name', models.CharField(db_column='CustomerName', max_length=100, null=True)),
                ('customer_alias', models.CharField(db_column='CustomerAlias', max_length=100, null=True)),
                ('customer_address_line_1', models.CharField(db_column='CustomerAddressLine1', max_length=100, null=True)),
                ('customer_address_line_2', models.CharField(db_column='CustomerAddressLine2', max_length=100, null=True)),
                ('postal_code', models.CharField(db_column='PostalCode', max_length=10, null=True)),
                ('contact_name', models.CharField(db_column='ContactName', max_length=100, null=True)),
                ('contact_title', models.CharField(db_column='ContactTitle', max_length=100, null=True)),
                ('phone', models.CharField(db_column='Phone', max_length=100, null=True)),
                ('email', models.CharField(db_column='Email', max_length=100, null=True)),
                ('website', models.CharField(db_column='Website', max_length=100, null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('account', models.ForeignKey(db_column='AccountID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.Account')),
                ('city', models.ForeignKey(db_column='CityID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.City')),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
            ],
            options={
                'db_table': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='CustomerHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('customer_version_id', models.BigAutoField(db_column='CustomerVersionID', primary_key=True, serialize=False)),
                ('customer_name', models.CharField(db_column='CustomerName', max_length=100, null=True)),
                ('customer_alias', models.CharField(db_column='CustomerAlias', max_length=100, null=True)),
                ('customer_address_line_1', models.CharField(db_column='CustomerAddressLine1', max_length=100, null=True)),
                ('customer_address_line_2', models.CharField(db_column='CustomerAddressLine2', max_length=100, null=True)),
                ('postal_code', models.CharField(db_column='PostalCode', max_length=10, null=True)),
                ('contact_name', models.CharField(db_column='ContactName', max_length=100, null=True)),
                ('contact_title', models.CharField(db_column='ContactTitle', max_length=100, null=True)),
                ('phone', models.CharField(db_column='Phone', max_length=100, null=True)),
                ('email', models.CharField(db_column='Email', max_length=100, null=True)),
                ('website', models.CharField(db_column='Website', max_length=100, null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('account_version', models.ForeignKey(db_column='AccountVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.AccountHistory')),
                ('city_version', models.ForeignKey(db_column='CityVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.CityHistory')),
                ('customer', models.ForeignKey(db_column='CustomerID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Customer')),
                ('service_level_version', models.ForeignKey(db_column='ServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevelHistory')),
            ],
            options={
                'db_table': 'Customer_History',
            },
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('equipment_type_id', models.BigAutoField(db_column='EquipmentTypeID', primary_key=True, serialize=False)),
                ('equipment_type_name', models.CharField(db_column='EquipmentTypeName', max_length=50)),
                ('equipment_type_code', models.CharField(db_column='EquipmentTypeCode', max_length=2)),
            ],
            options={
                'db_table': 'EquipmentType',
            },
        ),
        migrations.CreateModel(
            name='EquipmentTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('equipment_type_version_id', models.BigAutoField(db_column='EquipmentTypeVersionID', primary_key=True, serialize=False)),
                ('equipment_type_name', models.CharField(db_column='EquipmentTypeName', max_length=50)),
                ('equipment_type_code', models.CharField(db_column='EquipmentTypeCode', max_length=2)),
                ('equipment_type', models.ForeignKey(db_column='EquipmentTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.EquipmentType')),
            ],
            options={
                'db_table': 'EquipmentType_History',
            },
        ),
        migrations.CreateModel(
            name='FreightClass',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('freight_class_id', models.BigAutoField(db_column='FreightClassID', primary_key=True, serialize=False)),
                ('freight_class_name', models.CharField(db_column='FreightClassName', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'FreightClass',
            },
        ),
        migrations.CreateModel(
            name='FreightClassHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('freight_class_version_id', models.BigAutoField(db_column='FreightClassVersionID', primary_key=True, serialize=False)),
                ('freight_class_name', models.CharField(db_column='FreightClassName', max_length=50)),
                ('freight_class', models.ForeignKey(db_column='FreightClassID', on_delete=django.db.models.deletion.CASCADE, to='rrf.FreightClass')),
            ],
            options={
                'db_table': 'FreightClass_History',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('language_id', models.BigAutoField(db_column='LanguageID', primary_key=True, serialize=False)),
                ('language_name', models.CharField(db_column='LanguageName', max_length=50, unique=True)),
                ('language_code', models.CharField(db_column='LanguageCode', max_length=2, unique=True)),
            ],
            options={
                'db_table': 'Language',
            },
        ),
        migrations.CreateModel(
            name='LanguageHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('language_version_id', models.BigAutoField(db_column='LanguageVersionID', primary_key=True, serialize=False)),
                ('language_name', models.CharField(db_column='LanguageName', max_length=50)),
                ('language_code', models.CharField(db_column='LanguageCode', max_length=2)),
                ('language', models.ForeignKey(db_column='LanguageID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Language')),
            ],
            options={
                'db_table': 'Language_History',
            },
        ),
        migrations.CreateModel(
            name='LastAssignedUser',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('last_assigned_user_id', models.BigAutoField(db_column='LastAssignedUserID', primary_key=True, serialize=False)),
                ('persona_name', models.CharField(db_column='PersonaName', max_length=50)),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'LastAssignedUser',
            },
        ),
        migrations.CreateModel(
            name='RateBase',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('rate_base_id', models.BigAutoField(db_column='RateBaseID', primary_key=True, serialize=False)),
                ('rate_base_name', models.CharField(db_column='RateBaseName', max_length=50)),
            ],
            options={
                'db_table': 'RateBase',
            },
        ),
        migrations.CreateModel(
            name='RateBaseHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('rate_base_version_id', models.BigAutoField(db_column='RateBaseVersionID', primary_key=True, serialize=False)),
                ('rate_base_name', models.CharField(db_column='RateBaseName', max_length=50)),
                ('rate_base', models.ForeignKey(db_column='RateBaseID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RateBase')),
            ],
            options={
                'db_table': 'RateBase_History',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_id', models.BigAutoField(db_column='RequestID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32, unique=True)),
                ('request_code', models.CharField(db_column='RequestCode', max_length=32, unique=True)),
                ('initiated_on', models.DateTimeField(auto_now_add=True, db_column='InitiatedOn')),
                ('submitted_on', models.DateTimeField(db_column='SubmittedOn', null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('is_review', models.BooleanField(db_column='IsReview', default=False)),
                ('initiated_by', models.ForeignKey(db_column='InitiatedBy', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Request',
            },
        ),
        migrations.CreateModel(
            name='RequestAccessorials',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_accessorials_id', models.BigAutoField(db_column='RequestAccessorialsID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32, unique=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
            ],
            options={
                'db_table': 'RequestAccessorials',
            },
        ),
        migrations.CreateModel(
            name='RequestAccessorialsHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_accessorials_version_id', models.BigAutoField(db_column='RequestAccessorialsVersionID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('request_accessorials', models.ForeignKey(db_column='RequestAccessorialsID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestAccessorials')),
            ],
            options={
                'db_table': 'RequestAccessorials_History',
            },
        ),
        migrations.CreateModel(
            name='RequestEditorRight',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_editor_right_id', models.BigAutoField(db_column='RequestEditorRightID', primary_key=True, serialize=False)),
                ('notification', models.ForeignKey(db_column='NotificationID', on_delete=django.db.models.deletion.CASCADE, to='pac.Notification')),
                ('request', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'RequestEditorRight',
            },
        ),
        migrations.CreateModel(
            name='RequestEditorRightHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_editor_right_version_id', models.BigAutoField(db_column='RequestEditorRightVersionID', primary_key=True, serialize=False)),
                ('notification_version', models.ForeignKey(db_column='NotificationVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.NotificationHistory')),
                ('request_editor_right', models.ForeignKey(db_column='RequestEditorRightID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestEditorRight')),
            ],
            options={
                'db_table': 'RequestEditorRight_History',
            },
        ),
        migrations.CreateModel(
            name='RequestHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_version_id', models.BigAutoField(db_column='RequestVersionID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32)),
                ('request_code', models.CharField(db_column='RequestCode', max_length=32)),
                ('initiated_on', models.DateTimeField(db_column='InitiatedOn')),
                ('submitted_on', models.DateTimeField(db_column='SubmittedOn', null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('is_review', models.BooleanField(db_column='IsReview', default=False)),
                ('initiated_by_version', models.ForeignKey(db_column='InitiatedByVersion', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory')),
                ('request', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
                ('request_accessorials_version', models.ForeignKey(db_column='RequestAccessorialsVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestAccessorialsHistory')),
            ],
            options={
                'db_table': 'Request_History',
            },
        ),
        migrations.CreateModel(
            name='RequestInformation',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_information_id', models.BigAutoField(db_column='RequestInformationID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32, unique=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('is_new_business', models.BooleanField(db_column='IsNewBusiness', default=True, null=True)),
                ('is_paying_by_credit_card', models.BooleanField(db_column='IsPayingByCreditCard', default=True, null=True)),
                ('is_extended_payment', models.BooleanField(db_column='IsExtendedPayment', default=True, null=True)),
                ('extended_payment_days', models.IntegerField(db_column='ExtendedPaymentDays', null=True)),
                ('priority', models.IntegerField(db_column='Priority', null=True)),
                ('currency', models.ForeignKey(db_column='CurrencyID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.Currency')),
                ('customer', models.ForeignKey(db_column='CustomerID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Customer')),
                ('language', models.ForeignKey(db_column='LanguageID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.Language')),
            ],
            options={
                'db_table': 'RequestInformation',
            },
        ),
        migrations.CreateModel(
            name='RequestInformationHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_information_version_id', models.BigAutoField(db_column='RequestInformationVersionID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('is_new_business', models.BooleanField(db_column='IsNewBusiness', default=True, null=True)),
                ('is_paying_by_credit_card', models.BooleanField(db_column='IsPayingByCreditCard', default=True, null=True)),
                ('is_extended_payment', models.BooleanField(db_column='IsExtendedPayment', default=True, null=True)),
                ('extended_payment_days', models.IntegerField(db_column='ExtendedPaymentDays', null=True)),
                ('priority', models.IntegerField(db_column='Priority', null=True)),
                ('currency_version', models.ForeignKey(db_column='CurrencyVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.CurrencyHistory')),
                ('customer_version', models.ForeignKey(db_column='CustomerVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.CustomerHistory')),
                ('language_version', models.ForeignKey(db_column='LanguageVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.LanguageHistory')),
                ('request_information', models.ForeignKey(db_column='RequestInformationID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestInformation')),
            ],
            options={
                'db_table': 'RequestInformation_History',
            },
        ),
        migrations.CreateModel(
            name='RequestLane',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_lane_id', models.BigAutoField(db_column='RequestLaneID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32, unique=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('num_sections', models.IntegerField(db_column='NumSections', default=0)),
                ('num_lanes', models.IntegerField(db_column='NumLanes', default=0)),
                ('num_unpublished_lanes', models.IntegerField(db_column='NumUnpublishedLanes', default=0)),
                ('num_edited_lanes', models.IntegerField(db_column='NumEditedLanes', default=0)),
                ('num_duplicate_lanes', models.IntegerField(db_column='NumDuplicateLanes', default=0)),
                ('num_do_not_meet_commitment_lanes', models.IntegerField(db_column='NumDoNotMeetCommitmentLanes', default=0)),
            ],
            options={
                'db_table': 'RequestLane',
            },
        ),
        migrations.CreateModel(
            name='RequestLaneHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_lane_version_id', models.BigAutoField(db_column='RequestLaneVersionID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('num_sections', models.IntegerField(db_column='NumSections')),
                ('num_lanes', models.IntegerField(db_column='NumLanes')),
                ('num_unpublished_lanes', models.IntegerField(db_column='NumUnpublishedLanes')),
                ('num_edited_lanes', models.IntegerField(db_column='NumEditedLanes')),
                ('num_duplicate_lanes', models.IntegerField(db_column='NumDuplicateLanes')),
                ('num_do_not_meet_commitment_lanes', models.IntegerField(db_column='NumDoNotMeetCommitmentLanes', default=0)),
                ('request_lane', models.ForeignKey(db_column='RequestLaneID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestLane')),
            ],
            options={
                'db_table': 'RequestLane_History',
            },
        ),
        migrations.CreateModel(
            name='RequestProfile',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_profile_id', models.BigAutoField(db_column='RequestProfileID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32, unique=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('using_standard_tarrif', models.BooleanField(db_column='UsingStandardTariff', default=False, null=True)),
                ('exclude_from_fak_rating', models.BooleanField(db_column='ExcludeFromFAKRating', default=False, null=True)),
                ('use_actual_weight', models.BooleanField(db_column='UseActualWeight', default=False, null=True)),
                ('is_class_density', models.BooleanField(db_column='IsClassDensity', default=False, null=True)),
                ('avg_weight_density', models.DecimalField(db_column='AvgWeightedDensity', decimal_places=6, max_digits=19, null=True)),
                ('override_density', models.DecimalField(db_column='OverrideDensity', decimal_places=6, max_digits=19, null=True)),
                ('subject_to_cube', models.DecimalField(db_column='SubjectToCube', decimal_places=6, max_digits=19, null=True)),
                ('linear_length_rule', models.DecimalField(db_column='LinearLengthRule', decimal_places=6, max_digits=19, null=True)),
                ('weight_per_linear_length_rule', models.DecimalField(db_column='WeightPerLinearLengthRule', decimal_places=6, max_digits=19, null=True)),
                ('avg_weighted_class', models.DecimalField(db_column='AvgWeightedClass', decimal_places=6, max_digits=19, null=True)),
                ('override_class', models.DecimalField(db_column='OverrideClass', decimal_places=6, max_digits=19, null=True)),
                ('freight_elements', models.TextField(db_column='FreightElements', default='[]', null=True)),
                ('shipments', models.TextField(db_column='Shipments', default='[]', null=True)),
                ('shipping_controls', models.TextField(db_column='ShippingControls', default='[]', null=True)),
                ('competitors', models.TextField(db_column='Competitors', default='[]', null=True)),
                ('class_controls', models.TextField(db_column='ClassControls', default='[]', null=True)),
            ],
            options={
                'db_table': 'RequestProfile',
            },
        ),
        migrations.CreateModel(
            name='RequestProfileHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_profile_version_id', models.BigAutoField(db_column='RequestProfileVersionID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('using_standard_tarrif', models.BooleanField(db_column='UsingStandardTariff', default=False, null=True)),
                ('exclude_from_fak_rating', models.BooleanField(db_column='ExcludeFromFAKRating', default=False, null=True)),
                ('use_actual_weight', models.BooleanField(db_column='UseActualWeight', default=False, null=True)),
                ('is_class_density', models.BooleanField(db_column='IsClassDensity', default=False, null=True)),
                ('avg_weight_density', models.DecimalField(db_column='AvgWeightedDensity', decimal_places=6, max_digits=19, null=True)),
                ('override_density', models.DecimalField(db_column='OverrideDensity', decimal_places=6, max_digits=19, null=True)),
                ('subject_to_cube', models.DecimalField(db_column='SubjectToCube', decimal_places=6, max_digits=19, null=True)),
                ('linear_length_rule', models.DecimalField(db_column='LinearLengthRule', decimal_places=6, max_digits=19, null=True)),
                ('weight_per_linear_length_rule', models.DecimalField(db_column='WeightPerLinearLengthRule', decimal_places=6, max_digits=19, null=True)),
                ('avg_weighted_class', models.DecimalField(db_column='AvgWeightedClass', decimal_places=6, max_digits=19, null=True)),
                ('override_class', models.DecimalField(db_column='OverrideClass', decimal_places=6, max_digits=19, null=True)),
                ('freight_elements', models.TextField(db_column='FreightElements', default='[]', null=True)),
                ('shipments', models.TextField(db_column='Shipments', default='[]', null=True)),
                ('shipping_controls', models.TextField(db_column='ShippingControls', default='[]', null=True)),
                ('competitors', models.TextField(db_column='Competitors', default='[]', null=True)),
                ('class_controls', models.TextField(db_column='ClassControls', default='[]', null=True)),
                ('request_profile', models.ForeignKey(db_column='RequestProfileID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestProfile')),
            ],
            options={
                'db_table': 'RequestProfile_History',
            },
        ),
        migrations.CreateModel(
            name='RequestQueue',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_queue_id', models.BigAutoField(db_column='RequestQueueID', primary_key=True, serialize=False)),
                ('user_persona', models.CharField(db_column='UserPersona', max_length=50)),
                ('assigned_on', models.DateTimeField(db_column='AssignedOn')),
                ('due_date', models.DateTimeField(db_column='DueDate', null=True)),
                ('completed_on', models.DateTimeField(db_column='CompletedOn', null=True)),
                ('is_secondary', models.BooleanField(db_column='IsSecondary', default=False)),
                ('is_final', models.BooleanField(db_column='IsFinal', default=False)),
                ('is_actionable', models.BooleanField(db_column='IsActionable', default=False)),
                ('attachment', models.TextField(db_column='Attachment', default=None, null=True)),
                ('request', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
            ],
            options={
                'db_table': 'RequestQueue',
            },
        ),
        migrations.CreateModel(
            name='RequestQueueHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_queue_version_id', models.BigAutoField(db_column='RequestQueueVersionID', primary_key=True, serialize=False)),
                ('user_persona', models.CharField(db_column='UserPersona', max_length=50)),
                ('assigned_on', models.DateTimeField(db_column='AssignedOn')),
                ('due_date', models.DateTimeField(db_column='DueDate', null=True)),
                ('completed_on', models.DateTimeField(db_column='CompletedOn', null=True)),
                ('is_secondary', models.BooleanField(db_column='IsSecondary', default=False)),
                ('is_final', models.BooleanField(db_column='IsFinal', default=False)),
                ('is_actionable', models.BooleanField(db_column='IsActionable', default=False)),
                ('attachment', models.TextField(db_column='Attachment', default=None, null=True)),
                ('request_queue', models.ForeignKey(db_column='RequestQueueID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestQueue')),
            ],
            options={
                'db_table': 'RequestQueue_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSection',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_id', models.BigAutoField(db_column='RequestSectionID', primary_key=True, serialize=False)),
                ('section_number', models.UUIDField(db_column='SectionNumber', default=uuid.uuid4)),
                ('section_name', models.CharField(db_column='SectionName', max_length=50)),
                ('weight_break', models.TextField(db_column='WeightBreak', default='[]')),
                ('is_density_pricing', models.BooleanField(db_column='IsDensityPricing', default=False)),
                ('override_density', models.DecimalField(db_column='OverrideDensity', decimal_places=6, max_digits=19, null=True)),
                ('commodity', models.CharField(db_column='Commodity', max_length=100, null=True)),
                ('num_lanes', models.IntegerField(db_column='NumLanes', default=0)),
                ('num_unpublished_lanes', models.IntegerField(db_column='NumUnpublishedLanes', default=0)),
                ('num_edited_lanes', models.IntegerField(db_column='NumEditedLanes', default=0)),
                ('num_duplicate_lanes', models.IntegerField(db_column='NumDuplicateLanes', default=0)),
                ('num_do_not_meet_commitment_lanes', models.IntegerField(db_column='NumDoNotMeetCommitmentLanes', default=0)),
                ('equipment_type', models.ForeignKey(db_column='EquipmentTypeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.EquipmentType')),
                ('override_class', models.ForeignKey(db_column='OverrideClassID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.FreightClass')),
                ('rate_base', models.ForeignKey(db_column='RateBaseID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RateBase')),
                ('request_lane', models.ForeignKey(db_column='RequestLaneID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestLane')),
                ('sub_service_level', models.ForeignKey(db_column='SubServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevel')),
                ('weight_break_header', models.ForeignKey(db_column='WeightBreakHeaderID', on_delete=django.db.models.deletion.CASCADE, to='pac.WeightBreakHeader')),
            ],
            options={
                'db_table': 'RequestSection',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_version_id', models.BigAutoField(db_column='RequestSectionVersionID', primary_key=True, serialize=False)),
                ('section_number', models.CharField(db_column='SectionNumber', max_length=32)),
                ('section_name', models.CharField(db_column='SectionName', max_length=50)),
                ('commodity', models.CharField(db_column='Commodity', max_length=100, null=True)),
                ('weight_break', models.TextField(db_column='WeightBreak', default='[]')),
                ('is_density_pricing', models.BooleanField(db_column='IsDensityPricing', default=False)),
                ('override_density', models.DecimalField(db_column='OverrideDensity', decimal_places=6, max_digits=19, null=True)),
                ('num_lanes', models.IntegerField(db_column='NumLanes')),
                ('num_unpublished_lanes', models.IntegerField(db_column='NumUnpublishedLanes')),
                ('num_edited_lanes', models.IntegerField(db_column='NumEditedLanes')),
                ('num_duplicate_lanes', models.IntegerField(db_column='NumDuplicateLanes')),
                ('num_do_not_meet_commitment_lanes', models.IntegerField(db_column='NumDoNotMeetCommitmentLanes', default=0)),
                ('equipment_type_version', models.ForeignKey(db_column='EquipmentTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.EquipmentTypeHistory')),
                ('override_class_version', models.ForeignKey(db_column='OverrideClassVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.FreightClassHistory')),
                ('rate_base_version', models.ForeignKey(db_column='RateBaseVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RateBaseHistory')),
                ('request_lane_version', models.ForeignKey(db_column='RequestLaneVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestLaneHistory')),
                ('request_section', models.ForeignKey(db_column='RequestSectionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSection')),
                ('sub_service_level_version', models.ForeignKey(db_column='SubServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevelHistory')),
                ('weight_break_header_version', models.ForeignKey(db_column='WeightBreakHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.WeightBreakHeaderHistory')),
            ],
            options={
                'db_table': 'RequestSection_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLane',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_id', models.BigAutoField(db_column='RequestSectionLaneID', primary_key=True, serialize=False)),
                ('origin_province_code', models.CharField(db_column='OriginProvinceCode', max_length=2, null=True)),
                ('origin_region_code', models.CharField(db_column='OriginRegionCode', max_length=4, null=True)),
                ('origin_country_code', models.CharField(db_column='OriginCountryCode', max_length=2, null=True)),
                ('origin_terminal_code', models.CharField(db_column='OriginTerminalCode', max_length=3, null=True)),
                ('origin_zone_name', models.CharField(db_column='OriginZoneName', max_length=50, null=True)),
                ('origin_basing_point_name', models.CharField(db_column='OriginBasingPointName', max_length=50, null=True)),
                ('origin_service_point_name', models.CharField(db_column='OriginServicePointName', max_length=50, null=True)),
                ('origin_postal_code_name', models.CharField(db_column='OriginPostalCodeName', max_length=10, null=True)),
                ('origin_point_type_name', models.CharField(db_column='OriginPointTypeName', max_length=50)),
                ('origin_code', models.CharField(db_column='OriginCode', max_length=50)),
                ('destination_province_code', models.CharField(db_column='DestinationProvinceCode', max_length=2, null=True)),
                ('destination_region_code', models.CharField(db_column='DestinationRegionCode', max_length=4, null=True)),
                ('destination_country_code', models.CharField(db_column='DestinationCountryCode', max_length=2, null=True)),
                ('destination_terminal_code', models.CharField(db_column='DestinationTerminalCode', max_length=3, null=True)),
                ('destination_zone_name', models.CharField(db_column='DestinationZoneName', max_length=50, null=True)),
                ('destination_basing_point_name', models.CharField(db_column='DestinationBasingPointName', max_length=50, null=True)),
                ('destination_service_point_name', models.CharField(db_column='DestinationServicePointName', max_length=50, null=True)),
                ('destination_postal_code_name', models.CharField(db_column='DestinationPostalCodeName', max_length=10, null=True)),
                ('destination_point_type_name', models.CharField(db_column='DestinationPointTypeName', max_length=50)),
                ('destination_code', models.CharField(db_column='DestinationCode', max_length=50)),
                ('lane_number', models.CharField(db_column='LaneNumber', max_length=32)),
                ('is_published', models.BooleanField(db_column='IsPublished', default=False)),
                ('is_edited', models.BooleanField(db_column='IsEdited', default=False)),
                ('is_duplicate', models.BooleanField(db_column='IsDuplicate', default=False)),
                ('is_between', models.BooleanField(db_column='IsBetween', default=False)),
                ('is_lane_group', models.BooleanField(db_column='IsLaneGroup', default=False)),
                ('basing_point_hash_code', models.TextField(db_column='BasingPointHashCode', null=True)),
                ('lane_hash_code', models.TextField(db_column='LaneHashCode')),
                ('commitment', models.TextField(db_column='Commitment', default='[]')),
                ('customer_rate', models.TextField(db_column='CustomerRate', default='[]')),
                ('customer_discount', models.TextField(db_column='CustomerDiscount', default='[]')),
                ('dr_rate', models.TextField(db_column='DrRate', default='[]')),
                ('partner_rate', models.TextField(db_column='PartnerRate', default='[]')),
                ('partner_discount', models.TextField(db_column='PartnerDiscount', default='[]')),
                ('profitability', models.TextField(db_column='Profitability', default='[]')),
                ('pickup_count', models.IntegerField(db_column='PickupCount', default=0, null=True)),
                ('delivery_count', models.IntegerField(db_column='DeliveryCount', default=0, null=True)),
                ('dock_adjustment', models.DecimalField(db_column='DockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('margin', models.TextField(db_column='Margin', default='[]')),
                ('density', models.TextField(db_column='Density', default='[]')),
                ('pickup_cost', models.TextField(db_column='PickupCost', default='[]')),
                ('delivery_cost', models.TextField(db_column='DeliveryCost', default='[]')),
                ('accessorials_value', models.TextField(db_column='AccessorialsValue', default='[]')),
                ('accessorials_percentage', models.TextField(db_column='AccessorialsPercentage', default='[]')),
                ('do_not_meet_commitment', models.BooleanField(db_column='DoNotMeetCommitment', default=False)),
                ('destination_basing_point', models.ForeignKey(db_column='DestinationBasingPointID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.BasingPoint')),
                ('destination_country', models.ForeignKey(db_column='DestinationCountryID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Country')),
            ],
            options={
                'db_table': 'RequestSectionLane',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLaneHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_version_id', models.BigAutoField(db_column='RequestSectionLaneVersionID', primary_key=True, serialize=False)),
                ('origin_province_code', models.CharField(db_column='OriginProvinceCode', max_length=2, null=True)),
                ('origin_region_code', models.CharField(db_column='OriginRegionCode', max_length=4, null=True)),
                ('origin_country_code', models.CharField(db_column='OriginCountryCode', max_length=2, null=True)),
                ('origin_terminal_code', models.CharField(db_column='OriginTerminalCode', max_length=3, null=True)),
                ('origin_zone_name', models.CharField(db_column='OriginZoneName', max_length=50, null=True)),
                ('origin_basing_point_name', models.CharField(db_column='OriginBasingPointName', max_length=50, null=True)),
                ('origin_service_point_name', models.CharField(db_column='OriginServicePointName', max_length=50, null=True)),
                ('origin_postal_code_name', models.CharField(db_column='OriginPostalCodeName', max_length=10, null=True)),
                ('origin_point_type_name', models.CharField(db_column='OriginPointTypeName', max_length=50)),
                ('origin_code', models.CharField(db_column='OriginCode', max_length=50)),
                ('destination_province_code', models.CharField(db_column='DestinationProvinceCode', max_length=2, null=True)),
                ('destination_region_code', models.CharField(db_column='DestinationRegionCode', max_length=4, null=True)),
                ('destination_country_code', models.CharField(db_column='DestinationCountryCode', max_length=2, null=True)),
                ('destination_terminal_code', models.CharField(db_column='DestinationTerminalCode', max_length=3, null=True)),
                ('destination_zone_name', models.CharField(db_column='DestinationZoneName', max_length=50, null=True)),
                ('destination_basing_point_name', models.CharField(db_column='DestinationBasingPointName', max_length=50, null=True)),
                ('destination_service_point_name', models.CharField(db_column='DestinationServicePointName', max_length=50, null=True)),
                ('destination_postal_code_name', models.CharField(db_column='DestinationPostalCodeName', max_length=10, null=True)),
                ('destination_point_type_name', models.CharField(db_column='DestinationPointTypeName', max_length=50)),
                ('destination_code', models.CharField(db_column='DestinationCode', max_length=50)),
                ('lane_number', models.CharField(db_column='LaneNumber', max_length=32)),
                ('is_published', models.BooleanField(db_column='IsPublished', default=False)),
                ('is_edited', models.BooleanField(db_column='IsEdited', default=False)),
                ('is_duplicate', models.BooleanField(db_column='IsDuplicate', default=False)),
                ('is_between', models.BooleanField(db_column='IsBetween', default=False)),
                ('is_lane_group', models.BooleanField(db_column='IsLaneGroup', default=False)),
                ('basing_point_hash_code', models.TextField(db_column='BasingPointHashCode', null=True)),
                ('lane_hash_code', models.TextField(db_column='LaneHashCode')),
                ('commitment', models.TextField(db_column='Commitment', default='[]')),
                ('customer_rate', models.TextField(db_column='CustomerRate', default='[]')),
                ('customer_discount', models.TextField(db_column='CustomerDiscount', default='[]')),
                ('dr_rate', models.TextField(db_column='DrRate', default='[]')),
                ('partner_rate', models.TextField(db_column='PartnerRate', default='[]')),
                ('partner_discount', models.TextField(db_column='PartnerDiscount', default='[]')),
                ('profitability', models.TextField(db_column='Profitability', default='[]')),
                ('pickup_count', models.IntegerField(db_column='PickupCount', default=0, null=True)),
                ('delivery_count', models.IntegerField(db_column='DeliveryCount', default=0, null=True)),
                ('dock_adjustment', models.DecimalField(db_column='DockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('margin', models.TextField(db_column='Margin', default='[]')),
                ('density', models.TextField(db_column='Density', default='[]')),
                ('pickup_cost', models.TextField(db_column='PickupCost', default='[]')),
                ('delivery_cost', models.TextField(db_column='DeliveryCost', default='[]')),
                ('accessorials_value', models.TextField(db_column='AccessorialsValue', default='[]')),
                ('accessorials_percentage', models.TextField(db_column='AccessorialsPercentage', default='[]')),
                ('do_not_meet_commitment', models.BooleanField(db_column='DoNotMeetCommitment', default=False)),
                ('destination_basing_point_version', models.ForeignKey(db_column='DestinationBasingPointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.BasingPointHistory')),
                ('destination_country_version', models.ForeignKey(db_column='DestinationCountryVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.CountryHistory')),
            ],
            options={
                'db_table': 'RequestSectionLane_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLanePointType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_point_type_id', models.BigAutoField(db_column='RequestSectionLanePointTypeID', primary_key=True, serialize=False)),
                ('request_section_lane_point_type_name', models.CharField(db_column='RequestSectionLanePointTypeName', max_length=50)),
                ('is_density_pricing', models.BooleanField(db_column='IsDensityPricing', default=False)),
                ('location_hierarchy', models.IntegerField(db_column='LocationHierarchy')),
                ('is_group_type', models.BooleanField(db_column='IsGroupType', default=False)),
                ('is_point_type', models.BooleanField(db_column='IsPointType', default=False)),
                ('service_offering', models.ForeignKey(db_column='ServiceOfferingID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOffering')),
            ],
            options={
                'db_table': 'RequestSectionLanePointType',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLanePointTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_point_type_version_id', models.BigAutoField(db_column='RequestSectionLanePointTypeVersionID', primary_key=True, serialize=False)),
                ('request_section_lane_point_type_name', models.CharField(db_column='RequestSectionLanePointTypeName', max_length=50)),
                ('is_density_pricing', models.BooleanField(db_column='IsDensityPricing', default=False)),
                ('location_hierarchy', models.IntegerField(db_column='LocationHierarchy')),
                ('is_group_type', models.BooleanField(db_column='IsGroupType', default=False)),
                ('is_point_type', models.BooleanField(db_column='IsPointType', default=False)),
                ('request_section_lane_point_type', models.ForeignKey(db_column='RequestSectionLanePointTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLanePointType')),
                ('service_offering_version', models.ForeignKey(db_column='ServiceOfferingVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOfferingHistory')),
            ],
            options={
                'db_table': 'RequestSectionLanePointType_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLanePricingPoint',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_pricing_point_id', models.BigAutoField(db_column='RequestSectionLanePricingPointID', primary_key=True, serialize=False)),
                ('origin_postal_code_name', models.CharField(db_column='OriginPostalCodeName', max_length=10)),
                ('destination_postal_code_name', models.CharField(db_column='DestinationPostalCodeName', max_length=10)),
                ('pricing_point_number', models.CharField(db_column='PricingPointNumber', max_length=32)),
                ('pricing_point_hash_code', models.TextField(db_column='PricingPointHashCode')),
                ('dr_rate', models.TextField(db_column='DrRate', default='[]')),
                ('fak_rate', models.TextField(db_column='FakRate', default='[]')),
                ('profitability', models.TextField(db_column='Profitability', default='[]')),
                ('splits_all', models.TextField(db_column='SplitsAll', default='[]')),
                ('splits_all_usage_percentage', models.DecimalField(db_column='SplitsAllUsagePercentage', decimal_places=6, max_digits=19, null=True)),
                ('pickup_count', models.IntegerField(db_column='PickupCount', default=0, null=True)),
                ('delivery_count', models.IntegerField(db_column='DeliveryCount', default=0, null=True)),
                # ('dock_adjustment', models.DecimalField(db_column='DockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('margin', models.TextField(db_column='Margin', default='[]')),
                ('density', models.TextField(db_column='Density', default='[]')),
                ('pickup_cost', models.TextField(db_column='PickupCost', default='[]')),
                ('delivery_cost', models.TextField(db_column='DeliveryCost', default='[]')),
                ('accessorials_value', models.TextField(db_column='AccessorialsValue', default='[]')),
                ('accessorials_percentage', models.TextField(db_column='AccessorialsPercentage', default='[]')),
                ('destination_postal_code', models.ForeignKey(db_column='DestinationPostalCodeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCode')),
                ('origin_postal_code', models.ForeignKey(db_column='OriginPostalCodeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCode')),
                ('request_section_lane', models.ForeignKey(db_column='RequestSectionLaneID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLane')),
            ],
            options={
                'db_table': 'RequestSectionLanePricingPoint',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLanePricingPointHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_pricing_point_version_id', models.BigAutoField(db_column='RequestSectionLanePricingPointVersionID', primary_key=True, serialize=False)),
                ('origin_postal_code_name', models.CharField(db_column='OriginPostalCodeName', max_length=10)),
                ('destination_postal_code_name', models.CharField(db_column='DestinationPostalCodeName', max_length=10)),
                ('pricing_point_number', models.CharField(db_column='PricingPointNumber', max_length=32)),
                ('pricing_point_hash_code', models.TextField(db_column='PricingPointHashCode')),
                ('dr_rate', models.TextField(db_column='DrRate', default='[]')),
                ('fak_rate', models.TextField(db_column='FakRate', default='[]')),
                ('profitability', models.TextField(db_column='Profitability', default='[]')),
                ('splits_all', models.TextField(db_column='SplitsAll', default='[]')),
                ('splits_all_usage_percentage', models.DecimalField(db_column='SplitsAllUsagePercentage', decimal_places=6, max_digits=19, null=True)),
                ('pickup_count', models.IntegerField(db_column='PickupCount', default=0, null=True)),
                ('delivery_count', models.IntegerField(db_column='DeliveryCount', default=0, null=True)),
                ('dock_adjustment', models.DecimalField(db_column='[DockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('margin', models.TextField(db_column='Margin', default='[]')),
                ('density', models.TextField(db_column='Density', default='[]')),
                ('pickup_cost', models.TextField(db_column='PickupCost', default='[]')),
                ('delivery_cost', models.TextField(db_column='DeliveryCost', default='[]')),
                ('accessorials_value', models.TextField(db_column='AccessorialsValue', default='[]')),
                ('accessorials_percentage', models.TextField(db_column='AccessorialsPercentage', default='[]')),
                ('destination_postal_code_version', models.ForeignKey(db_column='DestinationPostalCodeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCodeHistory')),
                ('origin_postal_code_version', models.ForeignKey(db_column='OriginPostalCodeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCodeHistory')),
                ('request_section_lane_pricing_point', models.ForeignKey(db_column='RequestSectionLanePricingPointID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLanePricingPoint')),
                ('request_section_lane_version', models.ForeignKey(db_column='RequestSectionLaneVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLaneHistory')),
            ],
            options={
                'db_table': 'RequestSectionLanePricingPoint_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLaneStaging',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_staging_id', models.BigAutoField(db_column='RequestSectionLaneStagingID', primary_key=True, serialize=False)),
                ('request_section_lane_id', models.IntegerField(db_column='RequestSectionLaneID')),
                ('request_section_id', models.IntegerField(db_column='RequestSectionID')),
                ('request_lane_id', models.IntegerField(db_column='RequestLaneID')),
                ('origin_province_id', models.IntegerField(db_column='OriginProvinceID', null=True)),
                ('origin_region_id', models.IntegerField(db_column='OriginRegionID', null=True)),
                ('origin_country_id', models.IntegerField(db_column='OriginCountryID', null=True)),
                ('origin_terminal_id', models.IntegerField(db_column='OriginTerminalID', null=True)),
                ('origin_zone_id', models.IntegerField(db_column='OriginZoneID', null=True)),
                ('origin_basing_point_id', models.IntegerField(db_column='OriginBasingPointID', null=True)),
                ('origin_service_point_id', models.IntegerField(db_column='OriginServicePointID', null=True)),
                ('origin_postal_code_id', models.IntegerField(db_column='OriginPostalCodeID', null=True)),
                ('origin_point_type_id', models.IntegerField(db_column='OriginPointTypeID')),
                ('destination_province_id', models.IntegerField(db_column='DestinationProvinceID', null=True)),
                ('destination_region_id', models.IntegerField(db_column='DestinationRegionID', null=True)),
                ('destination_country_id', models.IntegerField(db_column='DestinationCountryID', null=True)),
                ('destination_terminal_id', models.IntegerField(db_column='DestinationTerminalID', null=True)),
                ('destination_zone_id', models.IntegerField(db_column='DestinationZoneID', null=True)),
                ('destination_basing_point_id', models.IntegerField(db_column='DestinationBasingPointID', null=True)),
                ('destination_service_point_id', models.IntegerField(db_column='DestinationServicePointID', null=True)),
                ('destination_postal_code_id', models.IntegerField(db_column='DestinationPostalCodeID', null=True)),
                ('destination_point_type_id', models.IntegerField(db_column='DestinationPointTypeID', null=True)),
                ('origin_province_code', models.CharField(db_column='OriginProvinceCode', max_length=2, null=True)),
                ('origin_region_code', models.CharField(db_column='OriginRegionCode', max_length=4, null=True)),
                ('origin_country_code', models.CharField(db_column='OriginCountryCode', max_length=2, null=True)),
                ('origin_terminal_code', models.CharField(db_column='OriginTerminalCode', max_length=3, null=True)),
                ('origin_zone_name', models.CharField(db_column='OriginZoneName', max_length=50, null=True)),
                ('origin_basing_point_name', models.CharField(db_column='OriginBasingPointName', max_length=50, null=True)),
                ('origin_service_point_name', models.CharField(db_column='OriginServicePointName', max_length=50, null=True)),
                ('origin_postal_code_name', models.CharField(db_column='OriginPostalCodeName', max_length=10, null=True)),
                ('origin_point_type_name', models.CharField(db_column='OriginPointTypeName', max_length=50)),
                ('origin_code', models.CharField(db_column='OriginCode', max_length=50)),
                ('destination_province_code', models.CharField(db_column='DestinationProvinceCode', max_length=2, null=True)),
                ('destination_region_code', models.CharField(db_column='DestinationRegionCode', max_length=4, null=True)),
                ('destination_country_code', models.CharField(db_column='DestinationCountryCode', max_length=2, null=True)),
                ('destination_terminal_code', models.CharField(db_column='DestinationTerminalCode', max_length=3, null=True)),
                ('destination_zone_name', models.CharField(db_column='DestinationZoneName', max_length=50, null=True)),
                ('destination_basing_point_name', models.CharField(db_column='DestinationBasingPointName', max_length=50, null=True)),
                ('destination_service_point_name', models.CharField(db_column='DestinationServicePointName', max_length=50, null=True)),
                ('destination_postal_code_name', models.CharField(db_column='DestinationPostalCodeName', max_length=10, null=True)),
                ('destination_point_type_name', models.CharField(db_column='DestinationPointTypeName', max_length=50)),
                ('destination_code', models.CharField(db_column='DestinationCode', max_length=50)),
                ('lane_number', models.CharField(db_column='LaneNumber', max_length=32)),
                ('is_published', models.BooleanField(db_column='IsPublished', default=False)),
                ('is_edited', models.BooleanField(db_column='IsEdited', default=False)),
                ('is_duplicate', models.BooleanField(db_column='IsDuplicate', default=False)),
                ('is_between', models.BooleanField(db_column='IsBetween', default=False)),
                ('is_lane_group', models.BooleanField(db_column='IsLaneGroup', default=False)),
                ('basing_point_hash_code', models.TextField(db_column='BasingPointHashCode', null=True)),
                ('lane_hash_code', models.TextField(db_column='LaneHashCode')),
                ('new_is_between', models.BooleanField(db_column='NewIsBetween', default=False)),
                ('new_is_active', models.BooleanField(db_column='NewIsActive', default=False)),
                ('new_is_inactive_viewable', models.BooleanField(db_column='NewIsInactiveViewable', default=False)),
                ('is_updated', models.BooleanField(db_column='IsUpdated', default=False)),
                ('context_id', models.CharField(db_column='ContextID', max_length=32)),
                ('context_created_on', models.CharField(db_column='ContextCreatedOn', max_length=20)),
                ('commitment', models.TextField(db_column='Commitment', default='[]')),
                ('new_commitment', models.TextField(db_column='NewCommitment', default='[]')),
                ('customer_rate', models.TextField(db_column='CustomerRate', default='[]')),
                ('new_customer_rate', models.TextField(db_column='NewCustomerRate', default='[]')),
                ('customer_discount', models.TextField(db_column='CustomerDiscount', default='[]')),
                ('new_customer_discount', models.TextField(db_column='NewCustomerDiscount', default='[]')),
                ('dr_rate', models.TextField(db_column='DrRate', default='[]')),
                ('new_dr_rate', models.TextField(db_column='NewDrRate', default='[]')),
                ('partner_rate', models.TextField(db_column='PartnerRate', default='[]')),
                ('new_partner_rate', models.TextField(db_column='NewPartnerRate', default='[]')),
                ('partner_discount', models.TextField(db_column='PartnerDiscount', default='[]')),
                ('new_partner_discount', models.TextField(db_column='NewPartnerDiscount', default='[]')),
                ('profitability', models.TextField(db_column='Profitability', default='[]')),
                ('new_profitability', models.TextField(db_column='NewProfitability', default='[]')),
                ('pickup_count', models.IntegerField(db_column='PickupCount', default=0, null=True)),
                ('new_pickup_count', models.IntegerField(db_column='NewPickupCount', default=0, null=True)),
                ('delivery_count', models.IntegerField(db_column='DeliveryCount', default=0, null=True)),
                ('new_delivery_count', models.IntegerField(db_column='NewDeliveryCount', default=0, null=True)),
                ('dock_adjustment', models.DecimalField(db_column='DockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('new_dock_adjustment', models.DecimalField(db_column='NewDockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('margin', models.TextField(db_column='Margin', default='[]')),
                ('new_margin', models.TextField(db_column='NewMargin', default='[]')),
                ('density', models.TextField(db_column='Density', default='[]')),
                ('new_density', models.TextField(db_column='NewDensity', default='[]')),
                ('pickup_cost', models.TextField(db_column='PickupCost', default='[]')),
                ('new_pickup_cost', models.TextField(db_column='NewPickupCost', default='[]')),
                ('delivery_cost', models.TextField(db_column='DeliveryCost', default='[]')),
                ('new_delivery_cost', models.TextField(db_column='NewDeliveryCost', default='[]')),
                ('accessorials_value', models.TextField(db_column='AccessorialsValue', default='[]')),
                ('new_accessorials_value', models.TextField(db_column='NewAccessorialsValue', default='[]')),
                ('accessorials_percentage', models.TextField(db_column='AccessorialsPercentage', default='[]')),
                ('new_accessorials_percentage', models.TextField(db_column='NewAccessorialsPercentage', default='[]')),
                ('do_not_meet_commitment', models.BooleanField(db_column='DoNotMeetCommitment', default=False)),
                ('new_do_not_meet_commitment', models.BooleanField(db_column='NewDoNotMeetCommitment', default=False)),
            ],
            options={
                'db_table': 'RequestSectionLane_Staging',
            },
        ),
        migrations.CreateModel(
            name='RequestStatus',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_status_id', models.BigAutoField(db_column='RequestStatusID', primary_key=True, serialize=False)),
                ('credit_analyst', models.ForeignKey(db_column='CreditAnalystID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('current_editor', models.ForeignKey(db_column='CurrentEditorID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pricing_analyst', models.ForeignKey(db_column='PricingAnalystID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
            ],
            options={
                'db_table': 'RequestStatus',
            },
        ),
        migrations.CreateModel(
            name='RequestStatusHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_status_version_id', models.BigAutoField(db_column='RequestStatusVersionID', primary_key=True, serialize=False)),
                ('credit_analyst_version', models.ForeignKey(db_column='CreditAnalystVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory')),
                ('current_editor_version', models.ForeignKey(db_column='CurrentEditorVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory')),
                ('pricing_analyst_version', models.ForeignKey(db_column='PricingAnalystVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory')),
                ('request_status', models.ForeignKey(db_column='RequestStatusID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestStatus')),
            ],
            options={
                'db_table': 'RequestStatus_History',
            },
        ),
        migrations.CreateModel(
            name='RequestStatusType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_status_type_id', models.BigAutoField(db_column='RequestStatusTypeID', primary_key=True, serialize=False)),
                ('request_status_type_name', models.CharField(db_column='RequestStatusTypeName', max_length=50, unique=True)),
                ('next_request_status_type', models.TextField(db_column='NextRequestStatusType', default='[]')),
                ('assigned_persona', models.CharField(db_column='AssignedPersona', max_length=50)),
                ('editor', models.CharField(db_column='Editor', max_length=50)),
                ('queue_personas', models.TextField(db_column='QueuePersonas', default='[]')),
                ('is_secondary', models.BooleanField(db_column='IsSecondary', default=False)),
                ('is_final', models.BooleanField(db_column='IsFinal', default=False)),
            ],
            options={
                'db_table': 'RequestStatusType',
            },
        ),
        migrations.CreateModel(
            name='RequestStatusTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_status_type_version_id', models.BigAutoField(db_column='RequestStatusTypeVersionID', primary_key=True, serialize=False)),
                ('request_status_type_name', models.CharField(db_column='RequestStatusTypeName', max_length=50)),
                ('next_request_status_type', models.TextField(db_column='NextRequestStatusType', default='[]')),
                ('assigned_persona', models.CharField(db_column='AssignedPersona', max_length=50)),
                ('editor', models.CharField(db_column='Editor', max_length=50)),
                ('queue_personas', models.TextField(db_column='QueuePersonas', default='[]')),
                ('is_secondary', models.BooleanField(db_column='IsSecondary', default=False)),
                ('is_final', models.BooleanField(db_column='IsFinal', default=False)),
                ('request_status_type', models.ForeignKey(db_column='RequestStatusTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestStatusType')),
            ],
            options={
                'db_table': 'RequestStatusType_History',
            },
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_type_id', models.BigAutoField(db_column='RequestTypeID', primary_key=True, serialize=False)),
                ('request_type_name', models.CharField(db_column='RequestTypeName', max_length=50, unique=True)),
                ('apply_to_customer_under_review', models.BooleanField(db_column='ApplyToCustomerUnderReview', default=True)),
                ('apply_to_revision', models.BooleanField(db_column='ApplyToRevision', default=True)),
                ('allow_sales_commitment', models.BooleanField(db_column='AllowSalesCommitment', default=True)),
            ],
            options={
                'db_table': 'RequestType',
            },
        ),
        migrations.CreateModel(
            name='RequestTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_type_version_id', models.BigAutoField(db_column='RequestTypeVersionID', primary_key=True, serialize=False)),
                ('request_type_name', models.CharField(db_column='RequestTypeName', max_length=50)),
                ('apply_to_customer_under_review', models.BooleanField(db_column='ApplyToCustomerUnderReview', default=True)),
                ('apply_to_revision', models.BooleanField(db_column='ApplyToRevision', default=True)),
                ('allow_sales_commitment', models.BooleanField(db_column='AllowSalesCommitment', default=True)),
                ('request_type', models.ForeignKey(db_column='RequestTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestType')),
            ],
            options={
                'db_table': 'RequestType_History',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('tariff_id', models.BigAutoField(db_column='TariffID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32, unique=True)),
                ('published_on', models.DateTimeField(auto_now_add=True, db_column='PublishedOn', null=True)),
                ('expires_on', models.DateTimeField(auto_now_add=True, db_column='ExpiresOn', null=True)),
                ('document_url', models.TextField(db_column='DocumentUrl', null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('request', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
            ],
            options={
                'db_table': 'Tariff',
            },
        ),
        migrations.CreateModel(
            name='TariffHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('tariff_version_id', models.BigAutoField(db_column='TariffVersionID', primary_key=True, serialize=False)),
                ('request_number', models.CharField(db_column='RequestNumber', max_length=32, unique=True)),
                ('published_on', models.DateTimeField(db_column='PublishedOn', null=True)),
                ('expires_on', models.DateTimeField(db_column='ExpiresOn', null=True)),
                ('document_url', models.TextField(db_column='DocumentUrl', null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('request_version', models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestHistory')),
                ('tariff', models.ForeignKey(db_column='TariffID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Tariff')),
            ],
            options={
                'db_table': 'Tariff_History',
            },
        ),
        migrations.CreateModel(
            name='UserServiceLevel',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('user_service_level_id', models.BigAutoField(db_column='UserServiceLevelID', primary_key=True, serialize=False)),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserServiceLevel',
            },
        ),
        migrations.CreateModel(
            name='UserServiceLevelHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('user_service_level_version_id', models.BigAutoField(db_column='UserServiceLevelVersionID', primary_key=True, serialize=False)),
                ('service_level_version', models.ForeignKey(db_column='ServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevelHistory')),
                ('user_service_level', models.ForeignKey(db_column='UserServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='rrf.UserServiceLevel')),
                ('user_version', models.ForeignKey(db_column='UserVersionID', on_delete=django.db.models.deletion.CASCADE, to='core.UserHistory')),
            ],
            options={
                'db_table': 'UserServiceLevel_History',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('zone_id', models.BigAutoField(db_column='ZoneID', primary_key=True, serialize=False)),
                ('zone_name', models.CharField(db_column='ZoneName', max_length=50)),
            ],
            options={
                'db_table': 'Zone',
            },
        ),
        migrations.CreateModel(
            name='ZoneHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('zone_version_id', models.BigAutoField(db_column='ZoneVersionID', primary_key=True, serialize=False)),
                ('zone_name', models.CharField(db_column='ZoneName', max_length=50)),
                ('zone', models.ForeignKey(db_column='ZoneID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Zone')),
            ],
            options={
                'db_table': 'Zone_History',
            },
        ),
        migrations.AddField(
            model_name='requeststatushistory',
            name='request_status_type_version',
            field=models.ForeignKey(db_column='RequestStatusTypeVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestStatusTypeHistory'),
        ),
        migrations.AddField(
            model_name='requeststatushistory',
            name='request_version',
            field=models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestHistory'),
        ),
        migrations.AddField(
            model_name='requeststatushistory',
            name='sales_representative_version',
            field=models.ForeignKey(db_column='SalesRepresentativeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory'),
        ),
        migrations.AddField(
            model_name='requeststatus',
            name='request_status_type',
            field=models.ForeignKey(db_column='RequestStatusTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestStatusType'),
        ),
        migrations.AddField(
            model_name='requeststatus',
            name='sales_representative',
            field=models.ForeignKey(db_column='SalesRepresentativeID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='destination_point_type_version',
            field=models.ForeignKey(db_column='DestinationPointTypeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSectionLanePointTypeHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='destination_postal_code_version',
            field=models.ForeignKey(db_column='DestinationPostalCodeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCodeHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='destination_province_version',
            field=models.ForeignKey(db_column='DestinationProvinceVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.ProvinceHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='destination_region_version',
            field=models.ForeignKey(db_column='DestinationRegionVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.RegionHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='destination_service_point_version',
            field=models.ForeignKey(db_column='DestinationServicePointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.ServicePointHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='destination_terminal_version',
            field=models.ForeignKey(db_column='DestinationTerminalVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.TerminalHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='destination_zone_version',
            field=models.ForeignKey(db_column='DestinationZoneVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.ZoneHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='origin_basing_point_version',
            field=models.ForeignKey(db_column='OriginBasingPointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.BasingPointHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='origin_country_version',
            field=models.ForeignKey(db_column='OriginCountryVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.CountryHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='origin_point_type_version',
            field=models.ForeignKey(db_column='OriginPointTypeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSectionLanePointTypeHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='origin_postal_code_version',
            field=models.ForeignKey(db_column='OriginPostalCodeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCodeHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='origin_province_version',
            field=models.ForeignKey(db_column='OriginProvinceVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.ProvinceHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='origin_region_version',
            field=models.ForeignKey(db_column='OriginRegionVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.RegionHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='origin_service_point_version',
            field=models.ForeignKey(db_column='OriginServicePointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.ServicePointHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='origin_terminal_version',
            field=models.ForeignKey(db_column='OriginTerminalVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.TerminalHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='origin_zone_version',
            field=models.ForeignKey(db_column='OriginZoneVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.ZoneHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='request_section_lane',
            field=models.ForeignKey(db_column='RequestSectionLaneID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLane'),
        ),
        migrations.AddField(
            model_name='requestsectionlanehistory',
            name='request_section_version',
            field=models.ForeignKey(db_column='RequestSectionVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionHistory'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='destination_point_type',
            field=models.ForeignKey(db_column='DestinationPointTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSectionLanePointType'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='destination_postal_code',
            field=models.ForeignKey(db_column='DestinationPostalCodeID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCode'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='destination_province',
            field=models.ForeignKey(db_column='DestinationProvinceID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Province'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='destination_region',
            field=models.ForeignKey(db_column='DestinationRegionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Region'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='destination_service_point',
            field=models.ForeignKey(db_column='DestinationServicePointID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.ServicePoint'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='destination_terminal',
            field=models.ForeignKey(db_column='DestinationTerminalID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Terminal'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='destination_zone',
            field=models.ForeignKey(db_column='DestinationZoneID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Zone'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='origin_basing_point',
            field=models.ForeignKey(db_column='OriginBasingPointID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.BasingPoint'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='origin_country',
            field=models.ForeignKey(db_column='OriginCountryID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Country'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='origin_point_type',
            field=models.ForeignKey(db_column='OriginPointTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSectionLanePointType'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='origin_postal_code',
            field=models.ForeignKey(db_column='OriginPostalCodeID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCode'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='origin_province',
            field=models.ForeignKey(db_column='OriginProvinceID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Province'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='origin_region',
            field=models.ForeignKey(db_column='OriginRegionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Region'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='origin_service_point',
            field=models.ForeignKey(db_column='OriginServicePointID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.ServicePoint'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='origin_terminal',
            field=models.ForeignKey(db_column='OriginTerminalID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Terminal'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='origin_zone',
            field=models.ForeignKey(db_column='OriginZoneID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Zone'),
        ),
        migrations.AddField(
            model_name='requestsectionlane',
            name='request_section',
            field=models.ForeignKey(db_column='RequestSectionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSection'),
        ),
        migrations.AddField(
            model_name='requestqueuehistory',
            name='request_status_type_version',
            field=models.ForeignKey(db_column='RequestStatusTypeVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestStatusTypeHistory'),
        ),
        migrations.AddField(
            model_name='requestqueuehistory',
            name='request_version',
            field=models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestHistory'),
        ),
        migrations.AddField(
            model_name='requestqueuehistory',
            name='user_version',
            field=models.ForeignKey(db_column='UserVersionID', on_delete=django.db.models.deletion.CASCADE, to='core.UserHistory'),
        ),
        migrations.AddField(
            model_name='requestqueue',
            name='request_status_type',
            field=models.ForeignKey(db_column='RequestStatusTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestStatusType'),
        ),
        migrations.AddField(
            model_name='requestqueue',
            name='user',
            field=models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='requestinformationhistory',
            name='request_type_version',
            field=models.ForeignKey(db_column='RequestTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestTypeHistory'),
        ),
        migrations.AddField(
            model_name='requestinformation',
            name='request_type',
            field=models.ForeignKey(db_column='RequestTypeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestType'),
        ),
        migrations.AddField(
            model_name='requesthistory',
            name='request_information_version',
            field=models.ForeignKey(db_column='RequestInformationVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestInformationHistory'),
        ),
        migrations.AddField(
            model_name='requesthistory',
            name='request_lane_version',
            field=models.ForeignKey(db_column='RequestLaneVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestLaneHistory'),
        ),
        migrations.AddField(
            model_name='requesthistory',
            name='request_profile_version',
            field=models.ForeignKey(db_column='RequestProfileVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestProfileHistory'),
        ),
        migrations.AddField(
            model_name='requesthistory',
            name='submitted_by_version',
            field=models.ForeignKey(db_column='SubmittedByVersion', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory'),
        ),
        migrations.AddField(
            model_name='requesteditorrighthistory',
            name='request_version',
            field=models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestHistory'),
        ),
        migrations.AddField(
            model_name='requesteditorrighthistory',
            name='user_version',
            field=models.ForeignKey(db_column='UserVersionID', on_delete=django.db.models.deletion.CASCADE, to='core.UserHistory'),
        ),
        migrations.AddField(
            model_name='request',
            name='request_accessorials',
            field=models.ForeignKey(db_column='RequestAccessorialsID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestAccessorials'),
        ),
        migrations.AddField(
            model_name='request',
            name='request_information',
            field=models.ForeignKey(db_column='RequestInformationID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestInformation'),
        ),
        migrations.AddField(
            model_name='request',
            name='request_lane',
            field=models.ForeignKey(db_column='RequestLaneID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestLane'),
        ),
        migrations.AddField(
            model_name='request',
            name='request_profile',
            field=models.ForeignKey(db_column='RequestProfileID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestProfile'),
        ),
        migrations.AddField(
            model_name='request',
            name='submitted_by',
            field=models.ForeignKey(db_column='SubmittedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterIndexTogether(
            name='zonehistory',
            index_together={('zone', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='userservicelevelhistory',
            index_together={('user_service_level', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='tariffhistory',
            index_together={('tariff', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requesttypehistory',
            index_together={('request_type', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requeststatustypehistory',
            index_together={('request_status_type', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requeststatushistory',
            index_together={('request_status', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestsectionlanepricingpointhistory',
            index_together={('request_section_lane_pricing_point', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestsectionlanepointtypehistory',
            index_together={('request_section_lane_point_type', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestsectionlanehistory',
            index_together={('request_section_lane', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestsectionhistory',
            index_together={('request_section', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestqueuehistory',
            index_together={('request_queue', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestprofilehistory',
            index_together={('request_profile', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestlanehistory',
            index_together={('request_lane', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestinformationhistory',
            index_together={('request_information', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestaccessorialshistory',
            index_together={('request_accessorials', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='ratebasehistory',
            index_together={('rate_base', 'version_num')},
        ),
        migrations.AlterUniqueTogether(
            name='lastassigneduser',
            unique_together={('persona_name', 'service_level')},
        ),
        migrations.AlterIndexTogether(
            name='languagehistory',
            index_together={('language', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='freightclasshistory',
            index_together={('freight_class', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='equipmenttypehistory',
            index_together={('equipment_type', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='customerhistory',
            index_together={('customer', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='currencyhistory',
            index_together={('currency', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accounttreehistory',
            index_together={('account_tree', 'version_num')},
        ),
    ]
