# Generated by Django 2.1.13 on 2020-09-15 01:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pac', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='BrokerContractCost',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('broker_contract_cost_id', models.BigAutoField(db_column='BrokerContractCostID', primary_key=True, serialize=False)),
                ('cost_by_weight_break', models.TextField(db_column='Cost', default='{}')),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
                ('terminal', models.ForeignKey(db_column='TerminalID', on_delete=django.db.models.deletion.CASCADE, to='pac.Terminal')),
            ],
            options={
                'db_table': 'BrokerContractCost',
            },
        ),
        migrations.CreateModel(
            name='BrokerContractCostHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('broker_contract_cost_version_id', models.BigAutoField(db_column='BrokerContractCostVersionID', primary_key=True, serialize=False)),
                ('cost_by_weight_break', models.TextField(db_column='Cost', default='{}')),
                ('broker_contract_cost', models.ForeignKey(db_column='BrokerContractCostID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.BrokerContractCost')),
                ('service_level_version', models.ForeignKey(db_column='ServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevelHistory')),
                ('terminal_version', models.ForeignKey(db_column='TerminalVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.TerminalHistory')),
            ],
            options={
                'db_table': 'BrokerContractCost_History',
            },
        ),
        migrations.CreateModel(
            name='CurrencyExchange',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('currency_exchange_id', models.BigAutoField(db_column='CurrencyExchangeID', primary_key=True, serialize=False)),
                ('cad_to_usd', models.DecimalField(db_column='CADtoUSD', decimal_places=6, max_digits=19)),
                ('usd_to_cad', models.DecimalField(db_column='USDtoCAD', decimal_places=6, max_digits=19)),
            ],
            options={
                'db_table': 'CurrencyExchange',
            },
        ),
        migrations.CreateModel(
            name='CurrencyExchangeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('currency_exchange_version_id', models.BigAutoField(db_column='CurrencyExchangeVersionID', primary_key=True, serialize=False)),
                ('cad_to_usd', models.DecimalField(db_column='CADtoUSD', decimal_places=6, max_digits=19)),
                ('usd_to_cad', models.DecimalField(db_column='USDtoCAD', decimal_places=6, max_digits=19)),
                ('currency_exchange', models.ForeignKey(db_column='CurrencyExchangeID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.CurrencyExchange')),
            ],
            options={
                'db_table': 'CurrencyExchange_History',
            },
        ),
        migrations.CreateModel(
            name='DockRoute',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('dock_route_id', models.BigAutoField(db_column='DockRouteID', primary_key=True, serialize=False)),
                ('route_legs', models.TextField(db_column='RouteLegs', default='[]')),
            ],
            options={
                'db_table': 'DockRoute',
            },
        ),
        migrations.CreateModel(
            name='DockRouteHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('dock_route_version_id', models.BigAutoField(db_column='DockRouteVersionID', primary_key=True, serialize=False)),
                ('route_legs', models.TextField(db_column='RouteLegs', default='[]')),
                ('dock_route', models.ForeignKey(db_column='DockRouteID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.DockRoute')),
            ],
            options={
                'db_table': 'DockRoute_History',
            },
        ),
        migrations.CreateModel(
            name='Lane',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('lane_id', models.BigAutoField(db_column='LaneID', primary_key=True, serialize=False)),
                ('is_headhaul', models.BooleanField(db_column='IsHeadhaul', default=True)),
                ('destination_terminal', models.ForeignKey(db_column='DestinationTerminalID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Terminal')),
                ('origin_terminal', models.ForeignKey(db_column='OriginTerminalID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Terminal')),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
            ],
            options={
                'db_table': 'Lane',
            },
        ),
        migrations.CreateModel(
            name='LaneCost',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('lane_cost_id', models.BigAutoField(db_column='LaneCostID', primary_key=True, serialize=False)),
                ('cost', models.TextField(db_column='Cost', default='{}')),
                ('minimum_cost', models.DecimalField(db_column='MinimumCost', decimal_places=6, max_digits=19)),
                ('lane', models.ForeignKey(db_column='LaneID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.Lane')),
            ],
            options={
                'db_table': 'LaneCost',
            },
        ),
        migrations.CreateModel(
            name='LaneCostHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('lane_cost_version_id', models.BigAutoField(db_column='LaneCostVersionID', primary_key=True, serialize=False)),
                ('cost', models.TextField(db_column='Cost', default='{}')),
                ('minimum_cost', models.DecimalField(db_column='MinimumCost', decimal_places=6, max_digits=19)),
                ('lane_cost', models.ForeignKey(db_column='LaneCostID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.LaneCost')),
            ],
            options={
                'db_table': 'LaneCost_History',
            },
        ),
        migrations.CreateModel(
            name='LaneCostWeightBreakLevel',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('weight_break_level_id', models.BigAutoField(db_column='WeightBreakLevelID', primary_key=True, serialize=False)),
                ('weight_break_level_name', models.CharField(db_column='WeightBreakLevelName', max_length=50, unique=True)),
                ('weight_break_lower_bound', models.IntegerField(db_column='WeightBreakLowerBound')),
                ('service_offering', models.ForeignKey(db_column='ServiceOfferingID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOffering')),
            ],
            options={
                'db_table': 'LaneCostWeightBreakLevel',
            },
        ),
        migrations.CreateModel(
            name='LaneCostWeightBreakLevelHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('weight_break_level_version_id', models.BigAutoField(db_column='WeightBreakLevelVersionID', primary_key=True, serialize=False)),
                ('weight_break_level_name', models.CharField(db_column='WeightBreakLevelName', max_length=50)),
                ('weight_break_lower_bound', models.IntegerField(db_column='WeightBreakLowerBound')),
                ('service_offering_version', models.ForeignKey(db_column='ServiceOfferingVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOfferingHistory')),
                ('weight_break_level', models.ForeignKey(db_column='WeightBreakLevelID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.LaneCostWeightBreakLevel')),
            ],
            options={
                'db_table': 'LaneCostWeightBreakLevel_History',
            },
        ),
        migrations.CreateModel(
            name='LaneHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('lane_version_id', models.BigAutoField(db_column='LaneVersionID', primary_key=True, serialize=False)),
                ('is_headhaul', models.BooleanField(db_column='IsHeadhaul', default=True)),
                ('destination_terminal_version', models.ForeignKey(db_column='DestinationTerminalVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.TerminalHistory')),
                ('lane', models.ForeignKey(db_column='LaneID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.Lane')),
                ('origin_terminal_version', models.ForeignKey(db_column='OriginTerminalVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.TerminalHistory')),
                ('service_level_version', models.ForeignKey(db_column='ServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevelHistory')),
            ],
            options={
                'db_table': 'Lane_History',
            },
        ),
        migrations.CreateModel(
            name='LaneRoute',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('lane_route_id', models.BigAutoField(db_column='LaneRouteID', primary_key=True, serialize=False)),
                ('route_legs', models.TextField(db_column='RouteLegs', default='[]')),
                ('lane', models.ForeignKey(db_column='LaneID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.Lane')),
            ],
            options={
                'db_table': 'LaneRoute',
            },
        ),
        migrations.CreateModel(
            name='LaneRouteHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('lane_route_version_id', models.BigAutoField(db_column='LaneRouteVersionID', primary_key=True, serialize=False)),
                ('route_legs', models.TextField(db_column='RouteLegs', default='[]')),
                ('lane_route', models.ForeignKey(db_column='LaneRouteID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.LaneRoute')),
                ('lane_version', models.ForeignKey(db_column='LaneVersionID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.LaneHistory')),
            ],
            options={
                'db_table': 'LaneRoute_History',
            },
        ),
        migrations.CreateModel(
            name='LegCost',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('leg_cost_id', models.BigAutoField(db_column='LegCostID', primary_key=True, serialize=False)),
                ('cost', models.TextField(db_column='Cost', default='{}')),
                ('lane', models.ForeignKey(db_column='LaneID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.Lane')),
                ('service_mode', models.ForeignKey(db_column='ServiceModeID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceMode')),
            ],
            options={
                'db_table': 'LegCost',
            },
        ),
        migrations.CreateModel(
            name='LegCostHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('leg_cost_version_id', models.BigAutoField(db_column='LegCostVersionID', primary_key=True, serialize=False)),
                ('cost', models.TextField(db_column='Cost', default='{}')),
                ('lane_version', models.ForeignKey(db_column='LaneVersionID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.LaneHistory')),
                ('leg_cost', models.ForeignKey(db_column='LegCostID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.LegCost')),
                ('service_mode_version', models.ForeignKey(db_column='ServiceModeVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceModeHistory')),
            ],
            options={
                'db_table': 'LegCost_History',
            },
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('reference_id', models.BigAutoField(db_column='ReferenceId', primary_key=True, serialize=False)),
                ('request', models.TextField(db_column='Request')),
                ('response', models.TextField(db_column='Response')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_column='Timestamp')),
                ('system', models.CharField(db_column='System', max_length=99)),
                ('is_succesful', models.BooleanField(db_column='IsSuccesful', default=True)),
                ('error_log', models.TextField(blank=True, db_column='ErrorLog', null=True)),
            ],
            options={
                'db_table': 'RequestLog',
            },
        ),
        migrations.CreateModel(
            name='SpeedSheet',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('speed_sheet_id', models.BigAutoField(db_column='SpeedSheetID', primary_key=True, serialize=False)),
                ('margin', models.DecimalField(db_column='Margin', decimal_places=6, max_digits=19)),
                ('max_density', models.DecimalField(db_column='MaxDensity', decimal_places=6, max_digits=19)),
                ('min_density', models.DecimalField(db_column='MinDensity', decimal_places=6, max_digits=19)),
                ('service_offering', models.ForeignKey(db_column='ServiceOfferingID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOffering')),
            ],
            options={
                'db_table': 'SpeedSheet',
            },
        ),
        migrations.CreateModel(
            name='SpeedSheetHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('speed_sheet_version_id', models.BigAutoField(db_column='SpeedSheetVersionID', primary_key=True, serialize=False)),
                ('margin', models.DecimalField(db_column='Margin', decimal_places=6, max_digits=19)),
                ('max_density', models.DecimalField(db_column='MaxDensity', decimal_places=6, max_digits=19)),
                ('min_density', models.DecimalField(db_column='MinDensity', decimal_places=6, max_digits=19)),
                ('service_offering_version', models.ForeignKey(db_column='ServiceOfferingVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOfferingHistory')),
                ('speed_sheet', models.ForeignKey(db_column='SpeedSheetID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.SpeedSheet')),
            ],
            options={
                'db_table': 'SpeedSheet_History',
            },
        ),
        migrations.CreateModel(
            name='TerminalCost',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('terminal_cost_id', models.BigAutoField(db_column='TerminalCostID', primary_key=True, serialize=False)),
                ('is_intra_region_movement_enabled', models.BooleanField(db_column='IsIntraRegionMovementEnabled', default=False)),
                ('intra_region_movement_factor', models.DecimalField(db_column='IntraRegionMovementFactor', decimal_places=6, max_digits=19)),
                ('cost', models.TextField(db_column='Cost', default='[]')),
                ('service_offering', models.ForeignKey(db_column='ServiceOfferingID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOffering')),
                ('terminal', models.ForeignKey(db_column='TerminalID', on_delete=django.db.models.deletion.CASCADE, to='pac.Terminal')),
            ],
            options={
                'db_table': 'TerminalCost',
            },
        ),
        migrations.CreateModel(
            name='TerminalCostHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('terminal_cost_version_id', models.BigAutoField(db_column='TerminalCostVersionID', primary_key=True, serialize=False)),
                ('is_intra_region_movement_enabled', models.BooleanField(db_column='IsIntraRegionMovementEnabled', default=False)),
                ('intra_region_movement_factor', models.DecimalField(db_column='IntraRegionMovementFactor', decimal_places=6, max_digits=19)),
                ('cost', models.TextField(db_column='Cost', default='[]')),
                ('service_offering_version', models.ForeignKey(db_column='ServiceOfferingVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOfferingHistory')),
                ('terminal_cost', models.ForeignKey(db_column='TerminalCostID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.TerminalCost')),
                ('terminal_version', models.ForeignKey(db_column='TerminalVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.TerminalHistory')),
            ],
            options={
                'db_table': 'TerminalCost_History',
            },
        ),
        migrations.CreateModel(
            name='TerminalCostWeightBreakLevel',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('weight_break_level_id', models.BigAutoField(db_column='WeightBreakLevelID', primary_key=True, serialize=False)),
                ('weight_break_level_name', models.CharField(db_column='WeightBreakLevelName', max_length=50, unique=True)),
                ('weight_break_lower_bound', models.IntegerField(db_column='WeightBreakLowerBound')),
                ('service_offering', models.ForeignKey(db_column='ServiceOfferingID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOffering')),
            ],
            options={
                'db_table': 'TerminalCostWeightBreakLevel',
            },
        ),
        migrations.CreateModel(
            name='TerminalCostWeightBreakLevelHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('weight_break_level_version_id', models.BigAutoField(db_column='WeightBreakLevelVersionID', primary_key=True, serialize=False)),
                ('weight_break_level_name', models.CharField(db_column='WeightBreakLevelName', max_length=50)),
                ('weight_break_lower_bound', models.IntegerField(db_column='WeightBreakLowerBound')),
                ('service_offering_version', models.ForeignKey(db_column='ServiceOfferingVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOfferingHistory')),
                ('weight_break_level', models.ForeignKey(db_column='WeightBreakLevelID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.TerminalCostWeightBreakLevel')),
            ],
            options={
                'db_table': 'TerminalCostWeightBreakLevel_History',
            },
        ),
        migrations.CreateModel(
            name='TerminalServicePoint',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('terminal_service_point_id', models.BigAutoField(db_column='TerminalServicePointID', primary_key=True, serialize=False)),
                ('extra_miles', models.IntegerField(db_column='ExtraMiles')),
                ('service_point', models.ForeignKey(db_column='ServicePointID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServicePoint')),
                ('terminal', models.ForeignKey(db_column='TerminalID', on_delete=django.db.models.deletion.CASCADE, to='pac.Terminal')),
            ],
            options={
                'db_table': 'TerminalServicePoint',
            },
        ),
        migrations.CreateModel(
            name='TerminalServicePointHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('terminal_service_point_version_id', models.BigAutoField(db_column='TerminalServicePointVersionID', primary_key=True, serialize=False)),
                ('extra_miles', models.IntegerField(db_column='ExtraMiles')),
                ('service_point_version', models.ForeignKey(db_column='ServicePointVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServicePointHistory')),
                ('terminal_service_point', models.ForeignKey(db_column='TerminalServicePointID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.TerminalServicePoint')),
                ('terminal_version', models.ForeignKey(db_column='TerminalVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.TerminalHistory')),
            ],
            options={
                'db_table': 'TerminalServicePoint_History',
            },
        ),
        migrations.CreateModel(
            name='UnitConversion',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('unit_conversion_id', models.BigAutoField(db_column='UnitConversionID', primary_key=True, serialize=False)),
                ('conversion_factor', models.DecimalField(db_column='ConversionFactor', decimal_places=6, max_digits=19)),
                ('from_unit', models.ForeignKey(db_column='FromUnitID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Unit')),
                ('to_unit', models.ForeignKey(db_column='ToUnitID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Unit')),
            ],
            options={
                'db_table': 'UnitConversion',
            },
        ),
        migrations.CreateModel(
            name='UnitConversionHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('unit_conversion_version_id', models.BigAutoField(db_column='UnitConversionVersionID', primary_key=True, serialize=False)),
                ('conversion_factor', models.DecimalField(db_column='ConversionFactor', decimal_places=6, max_digits=19)),
                ('from_unit_version', models.ForeignKey(db_column='FromUnitVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.UnitHistory')),
                ('to_unit_version', models.ForeignKey(db_column='ToUnitVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.UnitHistory')),
                ('unit_conversion', models.ForeignKey(db_column='UnitConversionID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.UnitConversion')),
            ],
            options={
                'db_table': 'UnitConversion_History',
            },
        ),
        migrations.AddField(
            model_name='lanecosthistory',
            name='lane_version',
            field=models.ForeignKey(db_column='LaneVersionID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.LaneHistory'),
        ),
        migrations.AddField(
            model_name='dockroutehistory',
            name='lane_version',
            field=models.ForeignKey(db_column='LaneVersionID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.LaneHistory'),
        ),
        migrations.AddField(
            model_name='dockroute',
            name='lane',
            field=models.ForeignKey(db_column='LaneID', on_delete=django.db.models.deletion.CASCADE, to='pre_costing.Lane'),
        ),
        migrations.AlterIndexTogether(
            name='unitconversionhistory',
            index_together={('unit_conversion', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='unitconversion',
            index_together={('from_unit', 'to_unit')},
        ),
        migrations.AlterIndexTogether(
            name='terminalservicepointhistory',
            index_together={('terminal_service_point', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='terminalcostweightbreaklevelhistory',
            index_together={('weight_break_level', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='terminalcosthistory',
            index_together={('terminal_cost', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='terminalcost',
            index_together={('terminal', 'service_offering')},
        ),
        migrations.AlterIndexTogether(
            name='speedsheethistory',
            index_together={('speed_sheet', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='legcosthistory',
            index_together={('leg_cost', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='legcost',
            index_together={('lane', 'service_mode')},
        ),
        migrations.AlterIndexTogether(
            name='laneroutehistory',
            index_together={('lane_route', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='lanehistory',
            index_together={('lane', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='lanecostweightbreaklevelhistory',
            index_together={('weight_break_level', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='lanecosthistory',
            index_together={('lane_cost', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='lane',
            index_together={('origin_terminal', 'destination_terminal', 'service_level')},
        ),
        migrations.AlterIndexTogether(
            name='dockroutehistory',
            index_together={('dock_route', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='currencyexchangehistory',
            index_together={('currency_exchange', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='brokercontractcosthistory',
            index_together={('broker_contract_cost', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='brokercontractcost',
            index_together={('terminal', 'service_level')},
        ),
    ]
